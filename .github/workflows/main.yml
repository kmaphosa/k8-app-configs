name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Nginx image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/nginx:latest ./nginx
        docker push ${{ secrets.DOCKER_USERNAME }}/nginx:latest

    - name: Build and push WordPress image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/wordpress:latest ./wordpress
        docker push ${{ secrets.DOCKER_USERNAME }}/wordpress:latest

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}
        
    - name: Deploy to Kubernetes
      run: |
          kubectl apply -f k8s/nginx-deployment.yaml
          kubectl apply -f k8s/wordpress-deployment.yaml
          kubectl apply -f k8s/mysql-deployment.yaml
          kubectl apply -f k8s/nginx-service.yaml
          kubectl apply -f k8s/wordpress-service.yaml
          kubectl apply -f k8s/mysql-service.yaml
      
    - name: Install Helm
      run: curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

    - name: Add Helm Repositories
      run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo update

    #- name: Create monitoring namespace
     # run: | 
      #    kubectl create namespace monitoring || true

    - name: Create Prometheus ConfigMap
      run: |
          kubectl apply -f k8s/prometheus-configmap.yaml 
    
    - name: Create Grafana ConfigMap
      run: | 
          kubectl apply -f k8s/grafana-datasource-configmap.yaml 
          
    - name: Install Prometheus
      run: | 
          kubectl create namespace monitoring || true helm install prometheus prometheus-community/kube-prometheus-stack --namespace monitoring 

    - name: Verify Prometheus Installation
      run: | 
          kubectl get pods -n monitoring
          kubectl get svc -n monitoring
          
    - name: Install Grafana
      run: | 
          helm install grafana grafana/grafana --namespace monitoring -f k8s/grafana-values.yaml

    - name: Verify Grafana Installation
      run: | 
          kubectl get pods -n monitoring 
          kubectl get svc -n monitoring

